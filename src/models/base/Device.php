<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;
use yii\helpers\ArrayHelper;
use yii\behaviors\TimestampBehavior;
use \app\models\DeviceQuery;

/**
 * This is the base-model class for table "devices".
 *
 * @property integer $id
 * @property string $tenant_id
 * @property string $device_uuid_hash
 * @property array $info
 * @property string $logged_at
 * @property integer $version_level
 * @property string $created_at
 * @property string $updated_at
 */
abstract class Device extends \yii\db\ActiveRecord
{

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'devices';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        $behaviors = parent::behaviors();
        $behaviors['timestamp'] = [
            'class' => TimestampBehavior::class,
            'value' => (new \DateTime())->format('Y-m-d H:i:s'),
                        ];
        
    return $behaviors;
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        $parentRules = parent::rules();
        return ArrayHelper::merge($parentRules, [
            [['info', 'logged_at'], 'safe'],
            [['version_level'], 'integer'],
            [['tenant_id'], 'string', 'max' => 255],
            [['device_uuid_hash'], 'string', 'max' => 500]
        ]);
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return ArrayHelper::merge(parent::attributeLabels(), [
            'id' => 'ID',
            'tenant_id' => 'Tenant ID',
            'device_uuid_hash' => 'Device Uuid Hash',
            'info' => 'Info',
            'logged_at' => 'Logged At',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
            'version_level' => 'Version Level',
        ]);
    }

    /**
     * @inheritdoc
     * @return DeviceQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new DeviceQuery(static::class);
    }
}
