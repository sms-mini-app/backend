<?php

namespace app\modules\v1\models;

use app\helpers\QrBankHelper;
use app\models\KeyStorage;
use app\models\Package as BasePackage;
use Yii;

class Package extends BasePackage
{
    public $isShowQrCode;

    public function fields()
    {
        if ($this->isShowQrCode) {
            return $this->withFieldPayment(parent::fields());
        }
        return parent::fields(); // TODO: Change the autogenerated stub
    }

    function withFieldPayment($fields)
    {
        $config = KeyStorage::find()->select("value")->where(["key" => [
            "payment.qr_new.note",
            "payment.qr.account_no_name"
        ]])->indexBy("key")->column();
        if (empty($config["payment.qr_new.note"]) || empty($config["payment.qr.account_no_name"])) {
            return $fields;
        }
        $tenantId = Yii::$app->user->identity->tenant_id;
        $qrNote = str_replace("{{tenant_id}}", $tenantId, $config["payment.qr_new.note"]);
        $qrNote = str_replace("{{package_code}}", $this->code, $qrNote);
        $qrBanker = new QrBankHelper(["amount" => $this->price, "accountNoName" => $config["payment.qr.account_no_name"], "note" => $qrNote]);
        $fields["qr_data"] = function () use ($qrBanker) {
            return $qrBanker->generate();
        };
        $fields["note_payment"] = function () use ($qrNote) {
            return $qrNote;
        };
        return $fields;
    }
}
